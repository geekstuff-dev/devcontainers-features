if test -z "$K8_INFO_PATH"; then
    err "K8_INFO_PATH missing"
    return 1
fi

if test -z "$K8_NAMESPACE"; then
    K8_NAMESPACE="default"
fi

UNIQUE_ID=$(echo ${VAULT_NAMESPACE}_${K8_INFO_PATH} | md5sum | cut -d' ' -f1)

export KUBECONFIG=~/.kube/config-${UNIQUE_ID}

VAULT_K8_AUTH_TTL=${VAULT_K8_AUTH_TTL:-"12h"}

echo -n "> Check K8 credentials for ${K8_INFO_PATH}: "
if test -e ${KUBECONFIG} && kubectl cluster-info &>/dev/null; then
    echo "OK"
else
    echo "Fetch thru Vault"

    # Fetch K8 info
    K8_INFO=$(vault kv get -format json $K8_INFO_PATH | jq -er ".data .data" | grep -v '^null$')
    if test -z "$K8_INFO"; then
        err "failed to get K8_INFO"
        return 1
    fi
    K8_CA_CERTIFICATE=$(echo "$K8_INFO" | jq -er '.ca_certificate')
    K8_FQDN=$(echo "$K8_INFO" | jq -er '.fqdn')
    K8_AUTH_PATH=$(echo "$K8_INFO" | jq -er '.vault_k8_path')

    # Generate credentials
    K8_AUTH_CLUSTER_ROLE_BINDING=${K8_AUTH_CLUSTER_ROLE_BINDING:-true}
    K8_AUTH=$(vault write -format json $K8_AUTH_PATH cluster_role_binding=${K8_AUTH_CLUSTER_ROLE_BINDING} kubernetes_namespace=default ttl=$VAULT_K8_AUTH_TTL | jq -er ".data" | grep -v '^null$')
    if test -z "$K8_AUTH"; then
        err "failed to get K8_AUTH"
        return 1
    fi
    K8_SERVICE_ACCOUNT_NAME=$(echo "$K8_AUTH" | jq -er '.service_account_name')
    K8_SERVICE_ACCOUNT_TOKEN=$(echo "$K8_AUTH" | jq -er '.service_account_token')

    # Set kubeconfig cluster
    K8_CA_CERTIFICATE_FILE="/tmp/${UNIQUE_ID}.certificate"
    echo "$K8_CA_CERTIFICATE" > $K8_CA_CERTIFICATE_FILE
    kubectl config set-cluster ${UNIQUE_ID} \
        --server=https://${K8_FQDN}:443 \
        --certificate-authority=${K8_CA_CERTIFICATE_FILE} \
        --embed-certs=true
    rm $K8_CA_CERTIFICATE_FILE

    # Set kubeconfig credentials
    kubectl config set-credentials ${K8_SERVICE_ACCOUNT_NAME} --token=${K8_SERVICE_ACCOUNT_TOKEN}

    # Set kubeconfig context
    kubectl config set-context default \
        --cluster=${UNIQUE_ID} \
        --namespace=${K8_NAMESPACE} \
        --user=${K8_SERVICE_ACCOUNT_NAME}

    kubectl config use-context default 1>/dev/null
fi
